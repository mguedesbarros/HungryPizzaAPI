// <auto-generated />
using System;
using HungryPizzariaAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HungryPizzariaAPI.Infrastructure.Data.Migrations
{
    [DbContext(typeof(PizzariaContext))]
    [Migration("20200720183724_RemoveCpfEntityCliente")]
    partial class RemoveCpfEntityCliente
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HungryPizzariaAPI.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnName("bairro")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("CEP")
                        .HasColumnName("cep")
                        .HasColumnType("varchar(8) CHARACTER SET utf8mb4")
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .HasColumnName("cidade")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Complemento")
                        .HasColumnName("complemento")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("data_atualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("endereco")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnName("numero")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("telefone")
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("HungryPizzariaAPI.Domain.Entities.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("PedidoID")
                        .HasColumnName("pedido_id")
                        .HasColumnType("int");

                    b.Property<int>("PizzaID1")
                        .HasColumnName("pizza_id1")
                        .HasColumnType("int");

                    b.Property<int?>("PizzaID2")
                        .HasColumnName("pizza_id2")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnName("quantidade")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeSabores")
                        .HasColumnName("quantidade_sabor")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnName("valor_unitario")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoID");

                    b.ToTable("item_pedido");
                });

            modelBuilder.Entity("HungryPizzariaAPI.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnName("cliente_id")
                        .HasColumnType("int");

                    b.Property<string>("CodPedido")
                        .IsRequired()
                        .HasColumnName("cod_pedido")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("data_atualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteID");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("HungryPizzariaAPI.Domain.Entities.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnName("data_atualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnName("data_criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Sabor")
                        .IsRequired()
                        .HasColumnName("sabor")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<decimal>("Valor")
                        .HasColumnName("valor")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("Id");

                    b.ToTable("pizza");
                });

            modelBuilder.Entity("HungryPizzariaAPI.Domain.Entities.ItemPedido", b =>
                {
                    b.HasOne("HungryPizzariaAPI.Domain.Entities.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HungryPizzariaAPI.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("HungryPizzariaAPI.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Pedido")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
